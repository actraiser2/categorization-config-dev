apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "categorization.fullname" . }}
  labels:
    {{- include "categorization.labels" . | nindent 4 }}
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "categorization.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "categorization.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "categorization.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: categorizer
                  key: DATASOURCE_PASSWORD
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: categorizer
                  key: DATASOURCE_USERNAME
            - name: MONGO_USERNAME
              valueFrom:
                secretKeyRef:
                  name: categorizer
                  key: MONGO_USERNAME
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: categorizer
                  key: MONGO_PASSWORD 
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          imagePullSecrets:
            - docker.io
          ports:
            - name: http
              containerPort: {{ .Values.service.containerPort }}
              protocol: TCP
          livenessProbe:
            periodSeconds: 60
            initialDelaySeconds: 20
            httpGet:
              path: /management/health/liveness
              port: http
          readinessProbe:
            periodSeconds: 60
            initialDelaySeconds: 20
            httpGet:
              path: /management/health/readiness
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: application-yaml
              mountPath: /workspace/source/src/config
            - name: azure-csi-secrets
              mountPath: /mnt/secrets/azure-secrets
      volumes:
        - name: application-yaml
          configMap:
            name: categorizer
            items:
              - key: application.yaml
                path: application.yaml
        - name: azure-csi-secrets
          csi:
            nodePublishSecretRef:
              azure-vault-secret
            driver: secrets-store.csi.x-k8s.io
            volumeAttributes:
              secretProviderClass: azure-vault-secret-provider
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
